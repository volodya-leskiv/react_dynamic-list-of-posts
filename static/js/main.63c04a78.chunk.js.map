{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getPostDetails","postId","fetch","then","response","ok","Error","json","PostsList","userSelect","setSelectedPostId","selectedPostId","setPostDetails","useState","posts","setPosts","useEffect","userId","result","catch","error","console","log","className","map","post","title","id","type","onClick","NewCommentForm","comments","setComments","name","setName","email","setEmail","body","setBody","addNewComment","event","preventDefault","comment","addComment","length","method","JSON","stringify","headers","onSubmit","placeholder","value","onChange","target","PostDetails","setPost","visibilityComment","setVisibilityComment","commentsFromServer","removeComments","deleteComment","filter","com","App","setUserSelect","postDetails","ReactDOM","render","document","getElementById"],"mappings":"8RAAaA,G,kBAAW,qCCaXC,EAAiB,SAACC,GAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBE,IAC/BE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,UAGlB,OAAOF,EAASG,W,OCTTC,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,EAA0BC,mBAAwB,MAAlD,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,WDjBgB,IAACC,KCkBZR,EDjBRP,MAAM,GAAD,OAAIH,EAAJ,iBAAgC,IAAXkB,EAAe,GAAf,kBAA+BA,KAC7Dd,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,YAGlB,OAAOF,EAASG,WCYfJ,MAAK,SAAAe,GAAM,OAAIH,EAASG,MAExBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACX,IAGF,sBAAKc,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAkB,UAAQ,cAAxC,SACGT,GAASA,EAAMU,KAAI,SAAAC,GAAI,OACtB,qBAAkBF,UAAU,kBAA5B,UACE,gCACE,6CAAcE,EAAKR,OAAnB,SACCQ,EAAKC,SAGPf,IAAmBc,EAAKE,GAErB,wBACEC,KAAK,SACLL,UAAU,2BACVM,QAAS,WACPnB,EAAkB,GAClBE,EAAe,OALnB,mBAYA,wBACEgB,KAAK,SACLL,UAAU,2BACVM,QAAS,WACPnB,EAAkBe,EAAKE,IACvBf,EAAea,IALnB,oBApBGA,EAAKE,a,OCtBXG,G,MAAkC,SAAC,GAIzC,IAHL7B,EAGI,EAHJA,OACA8B,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,EAAwBnB,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaC,EAAb,KACA,EAA0BrB,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAAwBvB,mBAAS,IAAjC,mBAAOwB,EAAP,KAAaC,EAAb,KAEMC,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,ICH0BC,EDGpBC,EAAuB,CAC3B1C,SACA0B,GAAII,GAAYA,EAASa,OAAS,EAClCX,OACAE,QACAE,QCRwBK,EDYZC,ECXTzC,MAAM,GAAD,OAAIH,EAAJ,aAAyB,CACnC8C,OAAQ,OACRR,KAAMS,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qCAGjB7C,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UDK3B+B,EAAQ,IACRF,EAAS,IACTF,EAAQ,IACRF,EAAYD,GAAQ,sBAAQA,GAAR,CAAkBY,MAGxC,OACE,uBACEpB,UAAU,iBACV0B,SAAU,SAACT,GACTD,EAAcC,IAHlB,UAME,qBAAKjB,UAAU,aAAf,SACE,uBACEK,KAAK,OACLK,KAAK,OACLiB,YAAY,YACZ3B,UAAU,wBACV4B,MAAOlB,EACPmB,SAAU,SAACZ,GACTN,EAAQM,EAAMa,OAAOF,YAK3B,qBAAK5B,UAAU,aAAf,SACE,uBACEK,KAAK,OACLK,KAAK,QACLiB,YAAY,aACZ3B,UAAU,wBACV4B,MAAOhB,EACPiB,SAAU,SAACZ,GACTJ,EAASI,EAAMa,OAAOF,YAK5B,qBAAK5B,UAAU,aAAf,SACE,0BACEU,KAAK,OACLiB,YAAY,oBACZ3B,UAAU,wBACV4B,MAAOd,EACPe,SAAU,SAACZ,GACTF,EAAQE,EAAMa,OAAOF,YAK3B,wBACEvB,KAAK,SACLL,UAAU,uCAFZ,gCE1EO+B,G,MAA+B,SAAC,GAAwB,IAAtB3C,EAAqB,EAArBA,eAC7C,EAAgCE,mBAA4B,MAA5D,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAAwBnB,mBAAsB,MAA9C,mBAAOY,EAAP,KAAa8B,EAAb,KACA,EAAkD1C,oBAAS,GAA3D,mBAAO2C,EAAP,KAA0BC,EAA1B,KAEMC,EAAqB,SAAC/B,GDZC,IAAC1B,KCaZ0B,EDZXzB,MAAM,GAAD,OAAIH,EAAJ,4BAAgCE,IACzCE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,cAGlB,OAAOF,EAASG,WCOfJ,MAAK,SAAAe,GAAM,OAAIc,EAAYd,MAE3BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGhCJ,qBAAU,WACRhB,EAAeW,GACZR,MAAK,SAAAe,GAAM,OAAIqC,EAAQrC,MAEvBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC9BsC,EAAmB/C,KAClB,CAACA,IAEJ,IAAMgD,EAAiB,SAAChC,IDhBG,SAACA,GACrBzB,MAAM,GAAD,OAAIH,EAAJ,qBAAyB4B,GAAM,CACzCkB,OAAQ,WCeRe,CAAcjC,GACdK,EAAYD,GAAYA,EAAS8B,QAAO,SAAAC,GAAG,OAAIA,EAAInC,KAAOA,OAG5D,OACE,sBAAKJ,UAAU,cAAf,UACE,+CAEA,yBAASA,UAAU,oBAAnB,SACE,mCAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAMY,SAGZ,0BAASd,UAAU,wBAAnB,UACE,wBACEK,KAAK,SACLL,UAAU,SACVM,QAAS,WACkB,KAAb,OAARE,QAAQ,IAARA,OAAA,EAAAA,EAAUa,SACZa,GAAsBD,IAL5B,mBASMA,EAAoB,OAAS,OATnC,mBAS6CzB,QAT7C,IAS6CA,OAT7C,EAS6CA,EAAUa,OATvD,eAYCY,GAEG,oBAAIjC,UAAU,oBAAd,gBACGQ,QADH,IACGA,OADH,EACGA,EAAUP,KAAI,SAAAkB,GAAO,OACpB,qBACEnB,UAAU,yBADZ,UAIE,wBACEK,KAAK,SACLL,UAAU,oCACVM,QAAS,WACHa,EAAQf,IACVgC,EAAejB,EAAQf,KAL7B,eAWA,4BAAIe,EAAQL,SAbPK,EAAQf,YAoBzB,kCACE,qBAAKJ,UAAU,4BAAf,SACE,cAAC,EAAD,CACEtB,OAAQU,EACRoB,SAAUA,EACVC,YAAaA,aCjBV+B,EA9DO,WACpB,MAAoClD,mBAAS,KAA7C,mBAAOJ,EAAP,KAAmBuD,EAAnB,KACA,EAA4CnD,mBAAS,GAArD,mBAAOF,EAAP,KAAuBD,EAAvB,KACA,EAAsCG,mBAAsB,MAA5D,mBAAOoD,EAAP,KAAoBrD,EAApB,KAaA,OAXAI,qBAAU,WACJL,GACFX,EAAeW,GACZR,MAAK,SAAAe,GAAM,OAAIN,EAAeM,MAC9BC,OAAM,SAAAC,GAELC,QAAQC,IAAIF,QAGjB,CAACT,IAGF,sBAAKY,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACV6B,SAAU,SAACZ,GACTwB,EAAcxB,EAAMa,OAAOF,QAH/B,UAME,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAM5B,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEd,YAAaA,EACbE,eAAgBA,EAChBD,kBAAmBA,EACnBE,eAAgBA,MAGnBqD,GACC,qBAAK1C,UAAU,eAAf,SACE,cAAC,EAAD,CAAaZ,eAAgBA,aCzDzCuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63c04a78.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = (userId: number): Promise<Post[]> => {\n  return fetch(`${BASE_URL}/posts${userId === 0 ? '' : `?userId=${userId}`}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Error!!!');\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPostDetails = (postId: number): Promise<Post> => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Shit! ');\n      }\n\n      return response.json();\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\ntype Props = {\n  userSelect: number;\n  setSelectedPostId: (postId: number) => void;\n  selectedPostId: number;\n  setPostDetails: (post: Post | null) => void\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userSelect,\n  setSelectedPostId,\n  selectedPostId,\n  setPostDetails,\n}) => {\n  const [posts, setPosts] = useState<Post[] | null>(null);\n\n  useEffect(() => {\n    getUserPosts(userSelect)\n      .then(result => setPosts(result))\n      // eslint-disable-next-line no-console\n      .catch((error) => console.log(error));\n  }, [userSelect]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts && posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    setSelectedPostId(0);\n                    setPostDetails(null);\n                  }}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    setSelectedPostId(post.id);\n                    setPostDetails(post);\n                  }}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { createComment } from '../../api/comments';\n\ntype Props = {\n  postId: number | null\n  comments: IComment[] | null\n  setComments: (comment: IComment[] | null) => void\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  comments,\n  setComments,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const addNewComment = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const addComment: IComment = {\n      postId,\n      id: comments && comments.length + 1,\n      name,\n      email,\n      body,\n\n    };\n\n    createComment(addComment);\n    setBody('');\n    setEmail('');\n    setName('');\n    setComments(comments && [...comments, addComment]);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        addNewComment(event);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = (postId: number | null): Promise<IComment[]> => {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Some error');\n      }\n\n      return response.json();\n    });\n};\n\nexport const deleteComment = (id: number): Promise<Response> => {\n  return fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const createComment = (comment: NewComment) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\n\ntype Props = {\n  selectedPostId: number;\n};\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [comments, setComments] = useState<IComment[] | null>(null);\n  const [post, setPost] = useState<Post | null>(null);\n  const [visibilityComment, setVisibilityComment] = useState(true);\n\n  const commentsFromServer = (id: number | null) => {\n    getPostComments(id)\n      .then(result => setComments(result))\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(result => setPost(result))\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error));\n    commentsFromServer(selectedPostId);\n  }, [selectedPostId]);\n\n  const removeComments = (id: number) => {\n    deleteComment(id);\n    setComments(comments && comments.filter(com => com.id !== id));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            if (comments?.length !== 0) {\n              setVisibilityComment(!visibilityComment);\n            }\n          }}\n        >\n          {`${visibilityComment ? 'Hide' : 'Show'} ${comments?.length} comments`}\n        </button>\n\n        {visibilityComment\n          && (\n            <ul className=\"PostDetails__list\">\n              {comments?.map(comment => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comment.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      if (comment.id) {\n                        removeComments(comment.id);\n                      }\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            comments={comments}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPostDetails } from './api/posts';\n\nconst App: React.FC = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n\n  useEffect(() => {\n    if (selectedPostId) {\n      getPostDetails(selectedPostId)\n        .then(result => setPostDetails(result))\n        .catch(error => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        });\n    }\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserSelect(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userSelect={+userSelect}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            setPostDetails={setPostDetails}\n          />\n        </div>\n        {postDetails && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        ) }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}